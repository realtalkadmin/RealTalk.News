{"version":3,"sources":["bargraph/admin.js","choropleth/admin.js","columns/admin.js","contents/admin.js","googlemaps/admin.js","html/admin.js","image/admin.js","imageslider/admin.js","scatterplot/admin.js","soundcloud/admin.js","splash/admin.js","table/admin.js","text/admin.js","twitter/admin.js","vimeo/admin.js","vine/admin.js","youtube/admin.js"],"names":["$","loadData","block","container","find","get","json","val","data","JSON","parse","initTable","url","snowball","pluginsUrl","getJSON","colHeaders","columns","type","hot","Handsontable","rowHeaders","fixedRowsTop","columnSorting","manualColumnMove","manualColumnResize","contextMenu","multiSelect","persistantState","fillHandle","observeChanges","search","undo","readOnly","stretchH","afterChange","changes","source","this","getData","refreshOnChange","trigger","afterLoadData","afterInit","generatedJSON","jsonString","stringify","exportSVG","iframe","svg","contents","html","b64","btoa","unescape","encodeURIComponent","attr","href-lang","href","on","spacing","Math","floor","text","closest","map","draw","contentWindow","drawBargraph","jQuery","mapType","reloadData","updateSettings","render","quantize","drawMap","initializeEditorAt","textarea","editor","CodeMirror","fromTextArea","mode","lineNumbers","lineWrapping","indentUnit","tabSize","theme","setSize","save","addNewColumn","selection","eq","addClass","each","index","removeClass","show","hide","checkbox","prop","activateSelectedButton","activateSelectedEditor","activeEditors","length","event","selectedIndex","stopPropagation","confirm","codeMirrorInstance","button","toTextArea","temp_textarea","temp_codeMirrorInstance","temp_checkbox","updateContents","buildContents","title","match","matches","elem","id","push","forEach","content","document","ready","hasClass","mapParse","re","exec","zoom","maptype","size","mToZ","lat","lon","m","c","z","parseInt","round","log","LN2","debounce","props","borderradius","file_frame","wp_media_post_id","wp","media","model","settings","post","set_to_post_id","uploader","param","open","frames","frame","multiple","attachment","insertingFrom","state","attributes","first","toJSON","blockIndex","urlIndex","drawScatterplot","getTrackId","indexOf","getSoundCloudUrl","options","soundCloudUrl","key","hasOwnProperty","soundCloudLink","show_user","show_comments","visual","soundcloud_options","trackId","trackUrl","counter","quicktags","buttons","QTags","_buttonsInit","darkenInput","bgDarkenVal","createTable","HTML","numRows","i","j","e","afterCreateRow","afterCreateCol","afterRemoveRow","afterRemoveCol","addButton","parseTweetUrl","tweetUrl","trim","tweetID","createTweet","parseVideoURL","videoUrl","videoID","inputColor","outputColor","substring"],"mappings":"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","file":"admins.min.js","sourcesContent":["(function($) {\n\n  $(\"#snowball-main\").on(\"open\", \".snowball-block-bargraph\", function() {\n    var block = $(this);\n    var spacing = Math.floor($(this).find(\".spacing\").val()*100) + \"%\";\n    $(this).find(\".spacing-output\").text(spacing);\n\n    $(this).find(\".export a\").on(\"mouseover\", function() {\n      exportSVG(block);\n    });\n\n    loadData(block);\n  });\n\n  $(\"#snowball-main\").on(\"input change\", \".snowball-block-bargraph .spacing\", function() {\n    var block = $(this).closest(\".snowball-block-bargraph\");\n    var spacing = Math.floor($(this).val()*100) + \"%\";\n\n    block.find(\".spacing-output\").text(spacing);\n    block.trigger(\"render\");\n  });\n\n  $(\"#snowball-main\").on(\"rendered\", \".snowball-block-bargraph\", function() {\n    var block = $(this);\n    var iframe = block.find(\".snowball-preview\");\n    var map = iframe.contents().find(\".chart\");\n    var draw = iframe[0].contentWindow.drawBargraph;\n\n    if (map && draw) {\n      draw(iframe.contents().find(\".snowball-block-bargraph\"));\n    }\n  });\n\n  function loadData(block) {\n    var container = block.find(\".table\").get(0);\n    var json = block.find(\"[data-target='json']\").val();\n\n    if (json) {\n      var data = JSON.parse(json);\n      initTable(block, container, data);\n    } else {\n      var url = snowball.pluginsUrl + \"/modules/bargraph/snowline.json\";\n\n      $.getJSON(url, function(data) {\n        initTable(block, container, data);\n      });\n    }\n  }\n\n  function reloadData(block) {\n    var container = block.find(\".table\").get(0);\n    var hot = block.data(\"hot\");\n    var json = block.find(\"[data-target='json']\").val();\n    var colHeaders = [\"label\", \"value\"];\n\n    if (json) {\n      var data = JSON.parse(json);\n      hot.updateSettings({\n        colHeaders: colHeaders\n      });\n      hot.loadData(data);\n      hot.render();\n    } else {\n      var url = snowball.pluginsUrl + \"/modules/bargraph/snowline.json\";\n\n      $.getJSON(url, function(data) {\n        hot.updateSettings({\n          colHeaders: colHeaders,\n        });\n        hot.loadData(data);\n        hot.render();\n      });\n    }\n  }\n\n  function initTable(block, container, data) {\n    var colHeaders = [\"Label\", \"Values\"];\n    var columns = [{data: \"label\", type: \"text\"}, {data: \"value\", type: \"numeric\"}];\n\n    var hot = new Handsontable(container, {\n      data: data,\n      rowHeaders: false,\n      fixedRowsTop: 0,\n      colHeaders: colHeaders,\n      columns: columns,\n      columnSorting: false,\n      manualColumnMove: false,\n      manualColumnResize: false,\n      contextMenu: true,\n      multiSelect: true,\n      persistantState: true,\n      fillHandle: true,\n      observeChanges: true,\n      search: true,\n      undo: true,\n      readOnly: false,\n      stretchH: \"all\",\n      afterChange: function(changes, source) {\n        var data = this.getData();\n        refreshOnChange(block, data);\n        if (source !== \"loadData\") {\n          block.trigger(\"render\");\n        }\n      },\n      afterLoadData: function() {\n        var data = this.getData();\n        refreshOnChange(block, data);\n      },\n      afterInit: function() {\n        block.trigger(\"render\");\n      }\n    });\n\n    block.data(\"hot\", hot);\n  }\n\n  function refreshOnChange(block, data, source) {\n    var generatedJSON = data;\n    var jsonString = JSON.stringify(generatedJSON);\n\n    block.find(\"[data-target='json']\").val(jsonString);\n  }\n\n  function exportSVG(block) {\n    var iframe = block.find(\".snowball-preview\");\n    var svg = iframe.contents().find(\".chart\").html();\n    var b64 = btoa(unescape(encodeURIComponent(svg)));\n\n    block.find(\".export a\").attr({\"href-lang\": \"image/svg+xml\", \"href\": \"data:image/svg+xml;base64,\\n\"+b64});\n  }\n\n})(jQuery);\n","(function($) {\n\n  $(\"#snowball-main\").on(\"open\", \".snowball-block-choropleth\", function() {\n    var block = $(this);\n    var quantize = block.find(\"[data-target='quantize']\").val();\n\n    $(this).find(\".quantize-output\").text(quantize);\n\n    $(this).find(\".export a\").on(\"mouseover\", function() {\n      exportSVG(block);\n    });\n\n    loadData(block);\n  });\n\n  $(\"#snowball-main\").on(\"rendered\", \".snowball-block-choropleth\", function() {\n    var block = $(this);\n    var iframe = block.find(\".snowball-preview\");\n    var map = iframe.contents().find(\".map\");\n    var draw = iframe[0].contentWindow.drawMap;\n\n    if (map && draw) {\n      draw(iframe.contents().find(\".snowball-block-choropleth\"));\n    }\n  });\n\n  $(\"#snowball-main\").on(\"change\", \".snowball-block-choropleth [data-target='map-type']\", function() {\n    var block = $(this).closest(\".snowball-block-choropleth\");\n    var mapType = $(this).val();\n\n    reloadData(block, mapType);\n  });\n\n  $(\"#snowball-main\").on(\"input change\", \".snowball-block-choropleth [data-target='quantize']\", function() {\n    var block = $(this).closest(\".snowball-block-choropleth\");\n    var hot = block.data(\"hot\");\n    var quantize = $(this).val();\n\n    block.find(\".quantize-output\").text(quantize);\n  });\n\n  function loadData(block) {\n    var container = block.find(\".table\").get(0);\n    var mapType = block.find(\"[data-target='map-type']\").val();\n    var json;\n\n    if (mapType === \"usa\") {\n      json = block.find(\"[data-target='json-usa']\").val();\n    } else {\n      json = block.find(\"[data-target='json-world']\").val();\n    }\n\n    if (json) {\n      var data = JSON.parse(json);\n      initTable(block, container, data, mapType); \n    } else {\n      var url = snowball.pluginsUrl + \"/modules/choropleth/precipitation-\" + mapType + \".json\";\n\n      $.getJSON(url, function(data) {\n        initTable(block, container, data, mapType);\n      });\n    }\n  }\n\n  function reloadData(block, mapType) {\n    var container = block.find(\".table\").get(0);\n    var hot = block.data(\"hot\");\n    var colHeaders;\n    var json;\n\n    if (mapType === \"usa\") {\n      json = block.find(\"[data-target='json-usa']\").val();\n      colHeaders = [\"fips\", \"State\", \"Value\"];\n    } else {\n      json = block.find(\"[data-target='json-world']\").val();\n      colHeaders = [\"fips\", \"Country\", \"Value\"];\n    }\n\n    if (json) {\n      var data = JSON.parse(json);\n      hot.updateSettings({\n        colHeaders: colHeaders\n      });\n      hot.loadData(data);\n      hot.render();\n    } else {\n      var url = snowball.pluginsUrl + \"/modules/choropleth/precipitation-\" + mapType + \".json\";\n\n      $.getJSON(url, function(data) {\n        hot.updateSettings({\n          colHeaders: colHeaders,\n        });\n        hot.loadData(data);\n        hot.render();\n      });\n    }\n  }\n\n  function initTable(block, container, data, mapType) {\n    var colHeaders = [\"fips\", \"Country\", \"Value\"];\n\n    if (mapType === \"usa\") {\n      colHeaders = [\"fips\", \"State\", \"Value\"];\n    }\n\n    var hot = new Handsontable(container, {\n      data: data,\n      rowHeaders: false,\n      fixedRowsTop: 0,\n      colHeaders: colHeaders,\n      columns: [{data: \"fips\", readOnly: true}, {data: \"State\", readOnly: true}, {data: \"Value\"}],\n      columnSorting: false,\n      manualColumnMove: false,\n      manualColumnResize: false,\n      contextMenu: true,\n      multiSelect: true,\n      persistantState: true,\n      fillHandle: true,\n      observeChanges: true,\n      search: true,\n      undo: true,\n      readOnly: false,\n      stretchH: \"all\",\n      afterChange: function(changes, source) {\n        var data = this.getData();\n        refreshOnChange(block, data);\n        if (source !== \"loadData\") {\n          block.trigger(\"render\");\n        }\n      },\n      afterLoadData: function() {\n        var data = this.getData();\n        refreshOnChange(block, data);\n      },\n      afterInit: function() {\n        block.trigger(\"render\");\n      }\n    });\n\n    block.data(\"hot\", hot);\n  }\n\n  function refreshOnChange(block, data, source) {\n    var generatedJSON = data;\n    var jsonString = JSON.stringify(generatedJSON);\n    var mapType = block.find(\"[data-target='map-type']\").val();\n\n    block.find(\"[data-target='json-\" + mapType + \"']\").val(jsonString);\n  }\n\n  function exportSVG(block) {\n    var iframe = block.find(\".snowball-preview\");\n    var svg = iframe.contents().find(\".map\").html();\n    var b64 = btoa(unescape(encodeURIComponent(svg)));\n\n    block.find(\".export a\").attr({\"href-lang\": \"image/svg+xml\", \"href\": \"data:image/svg+xml;base64,\\n\"+b64});\n  }\n\n})(jQuery);\n","(function ($) {\n  $(\"#snowball-main\").on(\"open\", \".snowball-block-columns\", function() {\n    var block = $(this);\n\n    block.find('input[type=\"checkbox\"]').each(function(index) {\n      if ($(this).prop(\"checked\")) {\n        var textarea = block.find(\".column-textarea\").eq(index);\n        initializeEditorAt(textarea);\n        block.find(\".toggle-button\").eq(index).addClass(\"show\");\n      }\n    });\n\n    block.find(\".CodeMirror\").hide().eq(0).show();\n    block.find(\".toggle-button\").eq(0).addClass(\"active\");\n\n    var activeEditors = block.find(\".show\").length;\n    if (activeEditors == 4) {\n      block.find(\".add-button\").hide();\n    }\n\n    if(activeEditors == 1) {\n      block.find(\".show .delete-column\").hide();\n    }\n  });\n\n  function initializeEditorAt(textarea) {\n    var editor = CodeMirror.fromTextArea(textarea[0], {\n      mode: \"htmlmixed\",\n      lineNumbers: true,\n      lineWrapping: true,\n      indentUnit: 2,\n      tabSize: 2,\n      theme: \"monokai\"\n    });\n\n    editor.setSize(\"100%\", \"100%\");\n\n    editor.on(\"change\", function() {\n      editor.save();\n      textarea.trigger(\"change\");\n    });\n\n    textarea.data(\"codeMirrorInstance\", editor);\n  }\n\n  $(\"#snowball-main\").on(\"click\", \".snowball-block-columns .toggle-button\", function(event) {\n    var block = $(this).closest(\".snowball-block-columns\");\n    var selectedIndex = block.find(\".toggle-buttons .toggle-button\").index($(this));\n\n    activateSelectedButton(block, selectedIndex);\n    activateSelectedEditor(block, selectedIndex);\n  });\n\n  $(\"#snowball-main\").on(\"click\", \".snowball-block-columns .add-button\", function(event) {\n    var block= $(this).closest(\".snowball-block-columns\");\n\n    var activeEditors = block.find(\".show\").length;\n    if (activeEditors == 1) {\n        block.find(\".toggle-button\").eq(0).find(\"span\").show();\n    }\n\n    if (activeEditors == 3) {\n      block.find(\".add-button\").hide();\n    }\n\n    block.find( '[type=\"checkbox\"]' ).each(function(index) {\n      if (!($(this).prop(\"checked\"))) {\n        addNewColumn(block, index);\n        return false;\n      }\n    });\n    block.trigger(\"render\");\n  });\n\n  function addNewColumn(block, selection) {\n    block.find(\".toggle-button\").eq(selection).addClass(\"show\");\n\n    var textarea = block.find(\".column-textarea\").eq(selection);\n    initializeEditorAt(textarea);\n\n    block.find(\".toggle-buttons .toggle-button\").each(function(index) {\n      if (index === selection) {\n        $(this).addClass(\"active\");\n      } else {\n        $(this).removeClass(\"active\");\n      }\n    });\n\n    block.find(\".snowball-tinker .CodeMirror\").each(function(index) {\n      if (index === selection) {\n        $(this).show();\n      } else {\n        $(this).hide();\n      }\n    });\n\n    var checkbox = block.find('[type=\"checkbox\"]').eq(selection);\n    checkbox.prop(\"checked\", true);\n  }\n\n  $(\"#snowball-main\").on(\"click\", \".snowball-block-columns .delete-column\", function(event) {\n    event.stopPropagation();\n\n    if (confirm(\"Are you sure you want to delete this column?\")) {\n      var block = $(this).closest(\".snowball-block-columns\");\n      var button = $(this).closest(\".toggle-button\");\n      var selectedIndex = block.find(\".toggle-buttons .toggle-button\").index(button);\n      var activeEditors = block.find(\".show\").length;\n      var textarea;\n      var codeMirrorInstance;\n      var checkbox;\n\n      if (activeEditors == 2) {\n        block.find(\".toggle-button\").eq(0).find(\"span\").hide();\n      }\n\n      if (selectedIndex == (activeEditors - 1)) {\n        textarea = block.find(\".column-textarea\").eq(selectedIndex);\n        codeMirrorInstance = textarea.data(\"codeMirrorInstance\");\n\n        checkbox = block.find( '[type=\"checkbox\"]' ).eq(selectedIndex);\n        checkbox.prop(\"checked\", false);\n\n        codeMirrorInstance.toTextArea();\n        textarea.val(\"\");\n\n        block.find(\".show\").eq(selectedIndex).removeClass(\"show\");\n\n        block.find(\".CodeMirror\").eq((selectedIndex - 1)).show();\n      } else {\n        while (selectedIndex < (activeEditors - 1)) {\n          textarea = block.find(\".column-textarea\").eq(selectedIndex);\n          codeMirrorInstance = textarea.data(\"codeMirrorInstance\");\n\n          codeMirrorInstance.toTextArea();\n\n          checkbox = block.find( '[type=\"checkbox\"]' ).eq((selectedIndex));\n          checkbox.prop(\"checked\", true);\n\n          var temp_textarea = block.find(\".column-textarea\").eq((selectedIndex + 1));\n          var temp_codeMirrorInstance = temp_textarea.data(\"codeMirrorInstance\");\n\n          temp_codeMirrorInstance.toTextArea();\n\n          var temp_checkbox = block.find( '[type=\"checkbox\"]' ).eq((selectedIndex + 1));\n          temp_checkbox.prop(\"checked\", false);\n\n          textarea.val((temp_textarea.val()));\n          initializeEditorAt(textarea);\n\n          if (selectedIndex == (activeEditors - 2)) {\n            block.find(\".show\").eq((selectedIndex + 1)).removeClass(\"show\");\n            activeEditors = block.find(\".show\").length;\n\n            block.find(\".column-textarea\").eq((selectedIndex + 1)).val(\"\");\n          }\n\n          selectedIndex = selectedIndex + 1;\n        }\n      }\n\n      block.trigger(\"render\");\n      activateSelectedButton(block, (selectedIndex - 1));\n      activateSelectedEditor(block, (selectedIndex - 1));\n    }\n\n    $(this).closest(\".snowball-block-columns\").find(\".add-button\").show();\n  });\n\n  function activateSelectedButton(block, selection) {\n    block.find(\".show\").each(function(index) {\n      if (index === selection) {\n        $(this).addClass(\"active\");\n      } else {\n        $(this).removeClass(\"active\");\n      }\n    });\n  }\n\n  function activateSelectedEditor(block, selection) {\n    block.find(\".snowball-tinker .CodeMirror\").each(function(index) {\n      if (index === selection) {\n        $(this).show();\n      } else {\n        $(this).hide();\n      }\n    });\n  }\n})(jQuery);","(function($) {\n\n  $(document).ready(function() {\n    updateContents();\n  });\n\n  $(\"#snowball-main\").on(\"rendered\", \".snowball-block\", function() {\n\n    if ($(this).hasClass(\"snowball-block-contents\")) {\n      return;\n    }\n\n    updateContents();\n  });\n\n  $(\"#snowball-main\").on(\"open\", \".snowball-block-contents\", function() {\n    updateContents($(this));\n  });\n\n  function updateContents(block) {\n    var html = buildContents();\n\n    if (typeof block == \"undefined\") {\n      $(\".snowball-block-contents\").each(function() {\n        var block = $(this);\n        $(this).find(\".html\").val(html);\n        block.trigger(\"render\");\n      });\n    } else {\n      block.find(\".html\").val(html);\n      block.trigger(\"render\");\n    }\n  }\n\n  function buildContents() {\n    var contents = [];\n    var html = \"<ul>\";\n\n    $(\".snowball-block\").each(function() {\n      var title = $(this).find(\".snowball-title\").text();\n      var match = \"[id]\";\n      var matches = $(this).find(\".snowball-preview\").contents().find(match);\n\n      if (title !== \"Contents\") {\n        matches.each(function() {\n          var elem = {\n            id: $(this).attr(\"id\"),\n            text: $(this).text()\n          };\n\n          contents.push(elem);\n        });\n      }\n    });\n\n    contents.forEach(function(elem, index) {\n      var content = \"<li><a href='#\" + elem.id + \"'>\" + elem.text + \"</a></li>\";\n      html = html + content; \n    });\n\n    html = html + \"</ul>\";\n\n    return html;\n  }\n\n})(jQuery);\n","(function($) {\n\n  $(\"#snowball-main\").on(\"open\", \".snowball-block-googlemaps\", function() {\n    var zoom = $(this).find(\".zoom\").val();\n    $(this).find(\".zoom-output\").text(zoom);\n  });\n\n  $(\"#snowball-main\").on(\"change keyup\", \".snowball-block-googlemaps .map-user\", debounce(function() {\n    var block = $(this).closest(\".snowball-block-googlemaps\");\n    var url = $(this).val();\n    var props = mapParse(url);\n\n    var lat = props && props.lat ? props.lat : '39.9581888';\n    var lon = props && props.lon ? props.lon : '-75.1887621';\n    var zoom = props && props.zoom ? props.zoom : '14';\n    var maptype = props && props.maptype ? props.maptype : 'roadmap';\n\n    block.find(\"[data-target='lat']\").val(lat);\n    block.find(\"[data-target='lon']\").val(lon);\n    block.find(\"[data-target='zoom']\").val(zoom);\n    block.find(\".zoom-output\").text(zoom);\n    block.find(\"[data-target='maptype'][value='\" + maptype +  \"']\").prop(\"checked\", true);\n\n    block.trigger(\"render\");\n  }, 250));\n\n  $(\"#snowball-main\").on(\"input change\", \".snowball-block-googlemaps .zoom\", debounce(function() {\n    var block = $(this).closest(\".snowball-block-googlemaps\");\n    var zoom = $(this).val();\n\n    block.find(\".zoom-output\").text(zoom);\n  }, 50));\n\n  function mapParse(url) {\n    var re = /google.[a-z.]+\\/maps\\/.*@(-?\\d+.\\d+),(-?\\d+.\\d+),(\\d+)([mz])/;\n    var matches = re.exec(url);\n\n    if (matches !== null) {\n      var zoom = matches[3];\n      var maptype = matches[4];\n      var size = \"600x400\";\n\n      if (maptype === \"m\") {\n        maptype = \"satellite\";\n        zoom = mToZ(zoom);\n      } else {\n        maptype = \"roadmap\";\n      }\n\n      return {\n        \"lat\": matches[1],\n        \"lon\": matches[2],\n        \"maptype\": maptype,\n        \"zoom\": zoom,\n        \"size\": size\n      };\n    }\n  }\n\n  function mToZ(m) {\n    var c = 56819712;\n    var z = c / parseInt(m, 10);\n\n    z = Math.round(1 + (Math.log(z) / Math.LN2));\n\n    return z;\n  }\n\n})(jQuery);\n","(function($) {\n\n    $(\"#snowball-main\").on(\"open\", \".snowball-block-html\", function() {\n\n      var block = $(this);\n      var textarea = block.find(\"textarea\");\n\n      var editor = CodeMirror.fromTextArea(textarea[0], {\n        mode: \"htmlmixed\",\n        lineNumbers: true,\n        lineWrapping: true,\n        indentUnit: 2,\n        tabSize: 2,\n        theme: \"monokai\"\n      });\n\n      editor.setSize(\"100%\", \"100%\");\n\n      editor.on(\"change\", function() {\n        editor.save();\n        textarea.trigger(\"change\");\n      });\n    });\n\n})(jQuery);\n","(function($) {\n  $(\"#snowball-main\").on(\"open\", \".snowball-block-image\", function() {\n    var borderradius = $(this).find(\".img-border-radius\").val() + \"%\";\n    $(this).find(\".img-border-radius-output\").text(borderradius);\n  });\n\n  $(document).ready(function() {\n    var file_frame;\n    var wp_media_post_id = wp.media.model.settings.post.id;\n    var set_to_post_id = snowball.id;\n\n    var index;\n\n    $(\"#snowball-main\").on(\"click\", \".snowball-block-image .upload-image-button\", function() {\n      var block = $(this).closest(\".snowball-block\");\n      index = $(\".snowball-block\").index(block);\n\n      if (file_frame) {\n        file_frame.uploader.uploader.param(\"post_id\", set_to_post_id);\n        file_frame.open();\n        return;\n      } else {\n        wp.media.model.settings.post.id = set_to_post_id;\n      }\n\n      file_frame = wp.media.frames.file_frame = wp.media({\n        title: $(this).data(\"uploader_title\"),\n        button: {\n          text: $(this).data(\"uploader_button_text\")\n        },\n        frame: \"post\",\n        multiple: false\n      });\n\n      file_frame.on(\"insert select\", function() {\n        var block = $(\".snowball-block\").eq(index);\n        var insertingFrom = file_frame.state().attributes.id;\n        var attachment;\n\n        if (insertingFrom === \"embed\") {\n          attachment = file_frame.state().props.attributes.url;\n        } else if (insertingFrom === \"insert\") {\n          attachment = file_frame.state().get(\"selection\").first().toJSON().url;\n        }\n\n        block.find(\".upload-image\").val(attachment).trigger(\"change\");\n        wp.media.model.settings.post.id = wp_media_post_id;\n      });\n\n      file_frame.open();\n    });\n\n    $(\"#snowball-main\").on(\"input change\", \".snowball-block-image .img-border-radius\", function() {\n      var block = $(this).closest(\".snowball-block-image\");\n      var borderradius = $(this).val() + \"%\";\n\n      block.find(\".img-border-radius-output\").text(borderradius);\n      block.trigger(\"render\");\n    });\n  });\n\n})(jQuery);\n","(function($) {\n\n  $(\"#snowball-main\").on(\"open\", \".snowball-block-imageslider\", function() {\n    var borderradius = $(this).find(\".img-border-radius\").val() + \"%\";\n    $(this).find(\".img-border-radius-output\").text(borderradius);\n  });\n\n  $(document).ready(function() {\n    var file_frame;\n    var wp_media_post_id = wp.media.model.settings.post.id;\n    var set_to_post_id = snowball.id;\n\n    var blockIndex;\n    var urlIndex;\n\n    $(\"#snowball-main\").on(\"click\", \".snowball-block-imageslider .upload-image-button\", function() {\n      var block = $(this).closest(\".snowball-block\");\n      blockIndex = $(\".snowball-block\").index(block);\n      urlIndex = block.find(\".upload-image-button\").index($(this));\n\n      if (file_frame) {\n        file_frame.uploader.uploader.param(\"post_id\", set_to_post_id);\n        file_frame.open();\n        return;\n      } else {\n        wp.media.model.settings.post.id = set_to_post_id;\n      }\n\n      file_frame = wp.media.frames.file_frame = wp.media({\n        title: $(this).data(\"uploader_title\"),\n        button: {\n          text: $(this).data(\"uploader_button_text\")\n        },\n        frame: \"post\",\n        multiple: false\n      });\n\n      file_frame.on(\"insert select\", function() {\n        var block = $(\".snowball-block\").eq(blockIndex);\n        var insertingFrom = file_frame.state().attributes.id;\n        var attachment;\n\n        if (insertingFrom === \"embed\") {\n          attachment = file_frame.state().props.attributes.url;\n        } else if (insertingFrom === \"insert\") {\n          attachment = file_frame.state().get(\"selection\").first().toJSON().url;\n        }\n\n        block.find(\".upload-image\").eq(urlIndex).val(attachment).trigger(\"change\");\n        wp.media.model.settings.post.id = wp_media_post_id;\n      });\n\n      file_frame.open();\n    });\n\n    $(\"#snowball-main\").on(\"input change\", \".snowball-block-image .img-border-radius\", function() {\n      var block = $(this).closest(\".snowball-block-image\");\n      var borderradius = $(this).val() + \"%\";\n\n      block.find(\".img-border-radius-output\").text(borderradius);\n      block.trigger(\"render\");\n    });\n  });\n})(jQuery);\n","(function($) {\n\n  $(\"#snowball-main\").on(\"open\", \".snowball-block-scatterplot\", function() {\n    var block = $(this);\n    var size = $(this).find(\".size\").val() + \"px\";\n    $(this).find(\".size-output\").text(size);\n\n    $(this).find(\".export a\").on(\"mouseover\", function() {\n      exportSVG(block);\n    });\n\n    loadData(block);\n  });\n\n  $(\"#snowball-main\").on(\"input change\", \".snowball-block-scatterplot .size\", function() {\n    var block = $(this).closest(\".snowball-block-scatterplot\");\n    var size = $(this).val() + \"px\";\n\n    block.find(\".size-output\").text(size);\n    block.trigger(\"render\");\n  });\n\n  $(\"#snowball-main\").on(\"rendered\", \".snowball-block-scatterplot\", function() {\n    var block = $(this);\n    var iframe = block.find(\".snowball-preview\");\n    var map = iframe.contents().find(\".chart\");\n    var draw = iframe[0].contentWindow.drawScatterplot;\n\n    if (map && draw) {\n      draw(iframe.contents().find(\".snowball-block-scatterplot\"));\n    }\n  });\n\n  function loadData(block) {\n    var container = block.find(\".table\").get(0);\n    var json = block.find(\"[data-target='json']\").val();\n\n    if (json) {\n      var data = JSON.parse(json);\n      initTable(block, container, data); \n    } else {\n      var url = snowball.pluginsUrl + \"/modules/scatterplot/snowline.json\";\n\n      $.getJSON(url, function(data) {\n        initTable(block, container, data);\n      });\n    }\n  }\n\n  function reloadData(block) {\n    var container = block.find(\".table\").get(0);\n    var hot = block.data(\"hot\");\n    var json = block.find(\"[data-target='json']\").val();\n    var colHeaders = [\"Label\", \"X\", \"Y\"];\n\n    if (json) {\n      var data = JSON.parse(json);\n      hot.updateSettings({\n        colHeaders: colHeaders\n      });\n      hot.loadData(data);\n      hot.render();\n    } else {\n      var url = snowball.pluginsUrl + \"/modules/choropleth/snowline.json\";\n\n      $.getJSON(url, function(data) {\n        hot.updateSettings({\n          colHeaders: colHeaders,\n        });\n        hot.loadData(data);\n        hot.render();\n      });\n    }\n  }\n\n  function initTable(block, container, data) {\n    var colHeaders = [\"Label\", \"X\", \"Y\"];\n    var columns = [{data: \"Label\", type: \"text\"}, {data: \"X\", type: \"numeric\"}, {data: \"Y\", type: \"numeric\"}];\n\n    var hot = new Handsontable(container, {\n      data: data,\n      rowHeaders: false,\n      fixedRowsTop: 0,\n      colHeaders: colHeaders,\n      columns: columns,\n      columnSorting: false,\n      manualColumnMove: false,\n      manualColumnResize: false,\n      contextMenu: true,\n      multiSelect: true,\n      persistantState: true,\n      fillHandle: true,\n      observeChanges: true,\n      search: true,\n      undo: true,\n      readOnly: false,\n      stretchH: \"all\",\n      afterChange: function(changes, source) {\n        var data = this.getData();\n        refreshOnChange(block, data);\n        if (source !== \"loadData\") {\n          block.trigger(\"render\");\n        }\n      },\n      afterLoadData: function() {\n        var data = this.getData();\n        refreshOnChange(block, data);\n      },\n      afterInit: function() {\n        block.trigger(\"render\");\n      }\n    });\n\n    block.data(\"hot\", hot);\n  }\n\n  function refreshOnChange(block, data, source) {\n    var generatedJSON = data;\n    var jsonString = JSON.stringify(generatedJSON);\n\n    block.find(\"[data-target='json']\").val(jsonString);\n  }\n\n  function exportSVG(block) {\n    var iframe = block.find(\".snowball-preview\");\n    var svg = iframe.contents().find(\".chart\").html();\n    var b64 = btoa(unescape(encodeURIComponent(svg)));\n\n    block.find(\".export a\").attr({\"href-lang\": \"image/svg+xml\", \"href\": \"data:image/svg+xml;base64,\\n\"+b64});\n  }\n\n})(jQuery);\n","(function($) {\n  function getTrackId(url) {\n    var re;\n\n    if (url && url.indexOf(\"api.soundcloud.com/tracks\") >= 0) {\n      re = /api.soundcloud.com\\/tracks\\/(\\d+&)/;\n      var matches = re.exec(url);\n      if (matches[1]) {\n        return matches[1];\n      }\n    }\n\n    return \"\";\n  }\n\n  function getSoundCloudUrl(id, options) {\n    var soundCloudUrl = \"https://w.soundcloud.com/player/?url=https://api.soundcloud.com/tracks/\";\n    soundCloudUrl = soundCloudUrl + id + \"&show_reposts=false&auto_play=false\";\n\n    for (var key in options) {\n      if (options.hasOwnProperty(key)) {\n        soundCloudUrl = soundCloudUrl + \"&\" + key + \"=\" + options[key];\n      }\n    }\n    return soundCloudUrl;\n  }\n\n  $(\"#snowball-main\").on(\"open\", \".snowball-block-soundcloud\", function() {\n    var block = $(this).closest(\".snowball-block-soundcloud\");\n    var soundCloudLink = $(block).find(\"input[data-target=embed-link]\").val();\n    var embedIframe = $(block)\n                        .find(\".snowball-preview\").contents()\n                        .find(\".embed-iframe\");\n    var show_user = $(block).find(\"input[data-target=show-user]\").prop(\"checked\");\n    var show_comments = $(block).find(\"input[data-target=show-comments]\").prop(\"checked\");\n    var visual = $(block).find(\"input[data-target=visual]\").prop(\"checked\");\n    var soundcloud_options = {\n      \"show_user\": show_user,\n      \"show_comments\": show_comments,\n      \"visual\": visual\n    };\n    var trackId = getTrackId(soundCloudLink);\n    var trackUrl = getSoundCloudUrl(trackId, soundcloud_options);\n    $(block).find(\".track-url\").val(trackUrl);\n\n    block.trigger(\"render\");\n  });\n\n  $(\"#snowball-main\").on(\"change keyup\", \".snowball-block-soundcloud\", debounce(function() {\n    var block = $(this).closest(\".snowball-block-soundcloud\");\n    var soundCloudLink = $(block).find(\"input[data-target=embed-link]\").val();\n    var embedIframe = $(block)\n                        .find(\".snowball-preview\").contents()\n                        .find(\".embed-iframe\");\n    var show_user = $(block).find(\"input[data-target=show-user]\").prop(\"checked\");\n    var show_comments = $(block).find(\"input[data-target=show-comments]\").prop(\"checked\");\n    var visual = $(block).find(\"input[data-target=visual]\").prop(\"checked\");\n    var soundcloud_options = {\n      \"show_user\": show_user,\n      \"show_comments\": show_comments,\n      \"visual\": visual\n    };\n    var trackId = getTrackId(soundCloudLink);\n    var trackUrl = getSoundCloudUrl(trackId, soundcloud_options);\n\n    $(block).find(\".track-url\").val(trackUrl);\n    block.trigger(\"render\");\n  }, 250));\n})(jQuery);\n","(function($) {\n\n  var counter = 0;\n  $(\"#snowball-main\").on(\"open\", \".snowball-block-splash\", function() {\n    var textarea = $(this).find(\"textarea\");\n    var id = \"snowball-block-splash-textarea-\" + counter;\n    textarea.attr(\"id\", id);\n    counter++;\n\n    quicktags({\n      id : id,\n      buttons: \"strong,em,link,blockquote,del,code,close\"\n    });\n\n    QTags._buttonsInit();\n\n    var darkenInput = $(this).find('.darken-bg');\n    var bgDarkenVal = Math.floor((darkenInput.val() * 100) / darkenInput.attr('max')) + \"%\";\n    $(this).find('.darken-bg-output').text(bgDarkenVal);\n  });\n\n  $(\"#snowball-main\").on(\"click\", \".snowball-block-splash .quicktags-toolbar .button\", function() {\n    $(this).closest(\".snowball-block\").trigger(\"render\");\n  });\n\n  $(document).ready(function() {\n    var file_frame;\n    var wp_media_post_id = wp.media.model.settings.post.id;\n    var set_to_post_id = snowball.id;\n\n    var index;\n\n    $(\"#snowball-main\").on(\"click\", \".snowball-block-splash .upload-image-button\", function() {\n      var block = $(this).closest(\".snowball-block\");\n      index = $(\".snowball-block\").index(block);\n\n      if (file_frame) {\n        file_frame.uploader.uploader.param(\"post_id\", set_to_post_id);\n        file_frame.open();\n        return;\n      } else {\n        wp.media.model.settings.post.id = set_to_post_id;\n      }\n\n      file_frame = wp.media.frames.file_frame = wp.media({\n        title: $(this).data(\"uploader_title\"),\n        button: {\n          text: $(this).data(\"uploader_button_text\")\n        },\n        frame: \"post\",\n        multiple: false\n      });\n\n      file_frame.on(\"insert select\", function() {\n        var block = $(\".snowball-block\").eq(index);\n        var insertingFrom = file_frame.state().attributes.id;\n        var attachment;\n\n        if (insertingFrom === \"embed\") {\n          attachment = file_frame.state().props.attributes.url;\n        } else if (insertingFrom === \"insert\") {\n          attachment = file_frame.state().get(\"selection\").first().toJSON().url;\n        }\n\n        block.find(\".upload-image\").val(attachment).trigger(\"change\");\n        wp.media.model.settings.post.id = wp_media_post_id;\n      });\n\n      file_frame.open();\n    });\n\n    $(\"#snowball-main\").on(\"input change\", \".snowball-block-splash .darken-bg\", function() {\n      var block = $(this).closest(\".snowball-block-splash\");\n      var bgDarkenVal = Math.floor(($(this).val() * 100) / $(this).attr('max')) + \"%\";\n\n      block.find(\".darken-bg-output\").text(bgDarkenVal);\n      block.trigger(\"render\");\n    });\n  });\n\n})(jQuery);\n","(function($) {\n  $(\"#snowball-main\").on(\"open\", \".snowball-block-table\", function() {\n    var block = $(this);\n    var container = block.find(\".table\").get(0);\n    var data = JSON.parse(block.find(\"[data-target='JSON']\").val());\n\n    var hot = new Handsontable(container, {\n      data: data,\n      rowHeaders: false,\n      fixedRowsTop: 1,\n      colHeaders: true,\n      columnSorting: false,\n      manualColumnMove: false,\n      manualColumnResize: false,\n      contextMenu: true,\n      multiSelect: true,\n      persistantState: true,\n      fillHandle: true,\n      observeChanges: true,\n      search: true,\n      undo: true,\n      readOnly: false,\n      stretchH: \"all\",\n      afterInit: function(e) {\n        refreshOnChange(block, data);\n        block.trigger(\"render\");\n      },\n      afterChange: function (e) {\n        refreshOnChange(block, data);\n      },\n      afterCreateRow: function (e) {\n        refreshOnChange(block, data);\n      },\n      afterCreateCol: function (e) {\n        refreshOnChange(block, data);\n      },\n      afterRemoveRow: function (e) {\n        refreshOnChange(block, data);\n      },\n      afterRemoveCol: function (e) {\n        refreshOnChange(block, data);\n      }\n    });\n\n    block.data(\"hot\", hot);\n  });\n\n  function refreshOnChange(block, data) {\n    var jsonString = JSON.stringify(data);\n\n    block.find(\"[data-target='JSON']\").val(jsonString);\n    block.find(\"[data-target='HTML']\").val(createTable(data));\n\n    block.find(\".handsontableInput\").trigger(\"change\");\n  }\n\n  function createTable(JSON) {\n    var HTML = \"  <table>\\n\";\n    var numRows = JSON.length;\n\n    for (var i = 0; i < numRows; i++) {\n      if (i === 0) {\n        HTML = HTML + \"    <thead>\\n\";\n      } else if (i === 1) {\n        HTML = HTML + \"    </thead>\\n    <tbody>\\n\";\n      }\n      HTML = HTML + \"      <tr>\\n\";\n      for (var j = 0; j < JSON[i].length; j++) {\n        if (JSON[i][j] === null) {\n          JSON[i][j] = \"\";\n        }\n\n        if (i === 0) {\n          HTML = HTML + \"        <th>\" + JSON[i][j] + \"</th>\\n\";\n        } else {\n          HTML = HTML + \"        <td>\" + JSON[i][j] + \"</td>\\n\";\n        }\n      }\n\n      HTML = HTML + \"      </tr>\\n\";\n    }\n\n    HTML = HTML + \"    </tbody>\\n  </table>\";\n\n    return HTML;\n  }\n\n})(jQuery);","(function($) {\n    var counter = 0;\n    QTags.addButton(\"eg_hr\", \"hr\", \"<hr />\", \"\", \"h\", \"Horizontal rule line\", 70);\n\n    $(\"#snowball-main\").on(\"open\", \".snowball-block-text\", function() {\n      var textarea = $(this).find(\"textarea\");\n      var id = \"snowball-block-text-textarea-\" + counter;\n      textarea.attr(\"id\", id);\n      counter++;\n\n      quicktags({\n        id : id,\n        buttons: \"strong,em,link,blockquote,del,code,ul,ol,li,code,close\"\n      });\n\n      QTags._buttonsInit();\n    });\n\n    $(\"#snowball-main\").on(\"click\", \".snowball-block-text .quicktags-toolbar .button\", function() {\n      $(this).closest(\".snowball-block\").trigger(\"render\");\n    });\n\n})(jQuery);\n","(function($) {\n\n  $(\"#snowball-main\").on(\"open\", \".snowball-block-twitter\", function() {\n    var tweetUrl = $(this).find(\"[data-target='tweet-url']\").val().trim();\n    var tweetID = parseTweetUrl(tweetUrl);\n\n    $(this).find(\"[data-target='id']\").val(tweetID);\n    $(this).trigger(\"render\");\n  });\n\n  $(\"#snowball-main\").on(\"change keyup\", \".snowball-block-twitter [data-target='tweet-url']\", debounce(function() {\n    var block = $(this).closest(\".snowball-block-twitter\");\n    var tweetUrl = $(this).val().trim();\n    var tweetID = parseTweetUrl(tweetUrl);\n\n    block.find(\"[data-target='id']\").val(tweetID);\n  }, 250));\n\n  $(\"#snowball-main\").on(\"rendered\", \".snowball-block-twitter\", function() {\n    var block = $(this);\n    var iframe = block.find(\".snowball-preview\");\n    var createTweet = iframe[0].contentWindow.createTweet;\n\n    if (createTweet) {\n      createTweet(iframe.contents().find(\".snowball-block-twitter\"));\n    }\n  });\n\n  function parseTweetUrl(url) {\n    var re = /^https?:\\/\\/twitter.com\\/(\\w+)\\/status(es)?\\/(\\d+)$/;\n    var matches = re.exec(url);\n\n    if (matches && matches[3]) {\n      return matches[3];\n    } else {\n      return \"\";\n    }\n  }\n\n})(jQuery);\n","(function($) {\n  $(\"#snowball-main\").on(\"open\", \".snowball-block-vimeo\", function() {\n    var videoUrl = $(this).find(\".video-url\").val();\n    var videoID = parseVideoURL(videoUrl);\n\n    $(this).find(\".video-id\").val(videoID);\n    $(this).trigger(\"render\");\n  });\n\n  $(\"#snowball-main\").on(\"change keyup\", \".snowball-block-vimeo .video-url\", debounce(function() {\n    var block = $(this).closest(\".snowball-block-vimeo\");\n    var videoUrl = $(this).val();\n    var videoID = parseVideoURL(videoUrl);\n\n    block.find(\".video-id\").val(videoID);\n    block.trigger(\"render\");\n  }, 250));\n\n  $(\"#snowball-main\").on(\"change keyup\", \".snowball-block-vimeo [data-target='control-color-input']\", function() {\n    var block = $(this).closest(\".snowball-block-vimeo\");\n    var inputColor = $(this).val();\n    var outputColor = \"&color=\" + inputColor.substring(1);\n    $(\"[data-target='control-color-output']\").val(outputColor);\n  });\n\n  function parseVideoURL(videoUrl) {\n    var re;\n\n    if (videoUrl.indexOf(\"video\") >= 0) {\n      re = /vimeo.com.*video\\/(\\S*)\"/;\n    } else {\n      re = /vimeo.com\\/(.*)/;\n    }\n\n    var matches = re.exec(videoUrl);\n    var match = matches && matches[1] ? matches[1] : \"65982111\";\n\n    return match;\n  }\n})(jQuery);\n","(function($) {\n\n  $(\"#snowball-main\").on(\"open\", \".snowball-block-vine\", function() {\n    var videoUrl = $(this).find(\".video-url\").val();\n    var videoID = parseVideoURL(videoUrl);\n\n    $(this).find(\".video-id\").val(videoID);\n    $(this).trigger(\"render\");\n  });\n\n  $(\"#snowball-main\").on(\"change keyup\", \".snowball-block-vine .video-url\", debounce(function() {\n    var block = $(this).closest(\".snowball-block-vine\");\n    var videoUrl = $(this).val();\n    var videoID = parseVideoURL(videoUrl);\n\n    block.find(\".video-id\").val(videoID);\n    block.trigger(\"render\");\n  }, 250));\n\n  function parseVideoURL(videoUrl) {\n    var re;\n\n    if (videoUrl.indexOf(\"embed\") >= 0) {\n      re = /vine.co\\/v\\/(.*)\\/embed/;\n    } else {\n      re = /vine.co\\/v\\/(.*)/;\n    }\n\n    var matches = re.exec(videoUrl);\n    var match = matches && matches[1] ? matches[1] : \"bjHh0zHdgZT\";\n\n    return match;\n  }\n})(jQuery);\n","(function($) {\n\n  $(\"#snowball-main\").on(\"open\", \".snowball-block-youtube\", function() {\n    var videoUrl = $(this).find(\".video-url\").val();\n    var videoID = parseVideoURL(videoUrl);\n\n    $(this).find(\".video-id\").val(videoID);\n    $(this).trigger(\"render\");\n  });\n\n  $(\"#snowball-main\").on(\"change keyup\", \".snowball-block-youtube .video-url\", debounce(function() {\n    var block = $(this).closest(\".snowball-block-youtube\");\n    var videoUrl = $(this).val();\n    var videoID = parseVideoURL(videoUrl);\n\n    block.find(\".video-id\").val(videoID);\n    block.trigger(\"render\");\n  }, 250));\n\n  function parseVideoURL(videoUrl) {\n    var re;\n\n    if (videoUrl.indexOf(\"embed\") >= 0) {\n      re = /youtube.com.*embed\\/(\\S*)\"/;\n    } else {\n      re = /youtube.com.*v=(.*)/;\n    }\n\n    var matches = re.exec(videoUrl);\n    var match = matches && matches[1] ? matches[1] : \"124847087\";\n\n    return match;\n  }\n})(jQuery);\n"]}